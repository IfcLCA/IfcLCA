name: Nginx Preview Deployment

on:
  pull_request:
    branches: [main]
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy Preview App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install SSHPass
        run: sudo apt-get install -y sshpass

      - name: Add server to known_hosts
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: Log PR number (for debugging)
        run: |
          echo "Pull Request Number: ${{ github.event.pull_request.number }}"

      - name: Deploy to Nginx server
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          PREVIEW_DOMAIN: ${{ secrets.PREVIEW_DOMAIN }}
        run: |
          # Check if the PR number is available
          if [ -z "${{ github.event.pull_request.number }}" ]; then
            echo "No pull request number found, using manual deployment directory."
            DEPLOY_DIR="/var/www/${PREVIEW_DOMAIN}/manual-deploy"
          else
            DEPLOY_DIR="/var/www/${PREVIEW_DOMAIN}/pr-${{ github.event.pull_request.number }}"
          fi

          echo "Deploying to: ${DEPLOY_DIR}"

          # Create deployment directory
          sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no ${SSH_USERNAME}@${SSH_HOST} "mkdir -p ${DEPLOY_DIR}"

          # Archive and copy the project
          tar -czf deploy.tar.gz *
          sshpass -p $SSH_PASSWORD scp -o StrictHostKeyChecking=no deploy.tar.gz ${SSH_USERNAME}@${SSH_HOST}:${DEPLOY_DIR}/

          # Extract and deploy the archive on the remote server
          sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no ${SSH_USERNAME}@${SSH_HOST} "
            cd ${DEPLOY_DIR} &&
            tar -xzf deploy.tar.gz &&
            ls -l ${DEPLOY_DIR} # Verify files after extraction
          "

          # Restart the app using the correct ecosystem.config.js path
          sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no ${SSH_USERNAME}@${SSH_HOST} "
            pm2 startOrReload /var/www/ifclca/IfcLCA/ecosystem.config.js --env production
          "

      - name: Post a comment with the preview URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number || "manual";
            const previewUrl = `https://${process.env.PREVIEW_DOMAIN || 'ifclca.com'}/pr-${prNumber}`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ The preview app was successfully deployed at ${previewUrl}.`
            })

      - name: Log deployment URL (for manual deployments)
        if: github.event_name != 'pull_request'
        run: |
          echo "ðŸš€ The app was successfully deployed at https://${{ secrets.PREVIEW_DOMAIN }}/manual-deploy"

      - name: Cleanup after PR merge/close
        if: github.event.action == 'closed'
        env:
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          PREVIEW_DOMAIN: ${{ secrets.PREVIEW_DOMAIN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          sshpass -p $SSH_PASSWORD ssh -o StrictHostKeyChecking=no ${SSH_USERNAME}@${SSH_HOST} "
            sudo rm -rf /var/www/${PREVIEW_DOMAIN}/pr-${PR_NUMBER} &&
            sudo nginx -s reload
          "
